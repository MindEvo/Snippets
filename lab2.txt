NAME: Thomas Benson
VERSION: 1.0 on 9/30/23 at 11:59pm

USERS

GET 	/users
-> query parameter Example: ?programming_languages=javascript
-> returns an array of user objects

GET 	/users/:id
-> path parameter :id
-> returns a user object
-> returns an error if no user was found

POST 	/users
-> request body is a user object
-> returns the user object with the id created from the server
-> User object fields:
    a) id (unique identifier)
    b) username (string). *Users cannot have the same username
    c) years_experience (number)
    d) programming_languages (array of string)

PUT 	/users/:id
-> path parameter :id
-> request body is a user object (does not include the id)
-> returns the updated user object
-> returns an error if no user was found

SNIPPETS

GET 	/snippets
-> query parameter Example: ?code_snippet=sort
-> returns an array of snippet objects

GET 	/snippets/:id
-> path parameter :id
-> query parameter Example: ?includes=programming_language
-> returns a snippet object
-> returns an error if no snippet was found

POST	/snippets
-> request body is a snippet object
-> returns the snippet object with the id and date created from the server
-> Snippet object fields:
    a) id (unique identifier)
    b) title (string)
    c) code_snippet (string)
    d) programming_language (string)
    e) created (date)
    f) user_id (reference to a user)

PUT 	/snippets/:id
-> path parameter :id
-> request body is a snippet object (does not include the id) (does not allow an update to created)
-> returns the updated snippet object
-> returns an error if no snippet was found

DELETE	/snippets/:id
-> path parameter :id
-> returns confirmation and id that the snippet object was deleted
-> returns an error if no snippet was found

BOOKMARKS

POST 	/bookmarks
-> request body is a bookmark object
-> returns the bookmark object with the id created from the server
-> Bookmark object fields:
    a) id (unique identifier)
    b) snippet_id (reference to a snippet)
    c) user_id (reference to a user)

PUT 	/bookmarks/:id
-> request body is a bookmark object (does not include the id)
-> returns the updated bookmark object
-> returns an error if no bookmark was found

DELETE 	/bookmarks/:id
-> path parameter :id
-> returns confirmation and id that the bookmark object was deleted
-> returns an error if no bookmark was found
